{
  "name": "tilelive-mapnik",
  "version": "0.5.0",
  "main": "./lib/mapnik_backend.js",
  "description": "Mapnik backend for tilelive",
  "url": "http://github.com/mapbox/tilelive-mapnik",
  "keywords": [
    "map",
    "server",
    "mapnik",
    "tms"
  ],
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "repositories": [
    {
      "type": "git",
      "url": "http://github.com/mapbox/tilelive-mapnik.git"
    }
  ],
  "contributors": [
    {
      "name": "Tom MacWright",
      "email": "tmcw"
    },
    {
      "name": "Will White",
      "email": "willwhite"
    },
    {
      "name": "Dane Springmeyer",
      "email": "springmeyer"
    },
    {
      "name": "Young Hahn",
      "email": "yhahn"
    }
  ],
  "dependencies": {
    "step": "~0.0.5",
    "underscore": "~1.3.3",
    "generic-pool": "~2.0.0",
    "mapnik": "~0.7.17",
    "eio": "~0.2.1",
    "mime": "~1.2.9",
    "sphericalmercator": "~1.0.1"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "engines": {
    "node": ">= 0.6.13 && < 0.9.0"
  },
  "scripts": {
    "test": "make test"
  },
  "readme": "# tilelive-mapnik\n\nRenderer backend for [tilelive.js](http://github.com/mapbox/tilelive.js) that\nuses [node-mapnik](http://github.com/mapnik/node-mapnik) to render tiles and\ngrids from a Mapnik XML file. `tilelive-mapnik` implements the\n[Tilesource API](https://github.com/mapbox/tilelive.js/blob/master/API.md).\n\n\n## Installation\n\n    npm install tilelive-mapnik\n\nThough `tilelive` is not a dependency of `tilelive-mapnik` you will want to\ninstall it to actually make use of `tilelive-mapnik` through a reasonable\nAPI.\n\n\n## Usage\n\n```javascript\nvar tilelive = require('tilelive');\nrequire('tilelive-mapnik').registerProtocols(tilelive);\n\ntilelive.load('mapnik:///path/to/file.xml', function(err, source) {\n    if (err) throw err;\n\n    // Interface is in XYZ/Google coordinates.\n    // Use `y = (1 << z) - 1 - y` to flip TMS coordinates.\n    source.getTile(0, 0, 0, function(err, tile, headers) {\n        // `err` is an error object when generation failed, otherwise null.\n        // `tile` contains the compressed image file as a Buffer\n        // `headers` is a hash with HTTP headers for the image.\n    });\n\n    // The `.getGrid` is implemented accordingly.\n});\n```\n\nNote that grid generation will only work when there's metadata inside a\n`<Parameters>` object in the Mapnik XML.\n\nThe key fields are `interactivity_layer` and `interactivity_fields`. See an\n[example in the tests](https://github.com/mapbox/tilelive-mapnik/blob/4e9cbf8347eba7c3c2b7e8fd4270ea39f9cc7af5/test/data/test.xml#L6-L7). These `Parameters` are normally added by the application that creates the XML,\nin this case [CartoCSS](https://github.com/mapbox/carto/blob/55fbafe0d0e8ec00515c5782a3664c15502f0437/lib/carto/renderer.js#L152-L189)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "http://github.com/mapbox/tilelive-mapnik.git"
  },
  "bugs": {
    "url": "https://github.com/mapbox/tilelive-mapnik/issues"
  },
  "homepage": "https://github.com/mapbox/tilelive-mapnik",
  "_id": "tilelive-mapnik@0.5.0",
  "dist": {
    "shasum": "bdbc96907af80187db0ea9c7a08952e50f6da89d"
  },
  "_resolved": "git://github.com/Vizzuality/tilelive-mapnik.git#5908346b227965adb93af8d1edc33b5244036a2c",
  "_from": "tilelive-mapnik@git://github.com/Vizzuality/tilelive-mapnik.git#5908346"
}
